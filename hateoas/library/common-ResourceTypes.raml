#%RAML 1.0 Library

usage: |
  provides a resuable implementation of the
  common collection - collection member
  pattern commonly found in RESTful APIs

resourceTypes:
  collection:
    description: |
      the collection of <<resourcePathName>>
    get:
      description: |
        query the collection of <<resourcePathName | !pluralize>>
        may include optional filtering and sorting criteria
        responses may paginated
      responses:
        200:
          description: |
            query on the collection of <<resourcePathName | !pluralize>>
            was successful
          body:
            application/json:
              type: <<collectionResponseType>>
        400: &responseBadRequest
          description: |
            one or more query parameters was missing, invalid or malformed
          body:
            application/json:
              type: <<errorResponseType>>
        500: &responseServerError
          description: |
            an internal error occurred that prevented the request from executing
          body:
            application/json:
              type: <<errorResponseType>>
    post:
      description: |
        create a new member of the collection of <<resourcePathName | !pluralize>>
        from a prototype object
      body: &requestCollectionMemberPrototype
        application/json:
          type: <<collectionMemberPrototypeType>>
      responses:
        201:
          description: |
            a new <<resourcePathName | !singularize>> was created
          body:
            application/json:
              type: <<collectionMemberResponseType>>
        400: *responseBadRequest
        409: &responseConflict
          description: |
            a new <<resourcePathName | !singularize>> was not created due to
            an attempt to violate a system constraint
          body:
            application/json:
              type: <<errorResponseType>>
        500: *responseServerError
  collectionMember:
    description: |
      an individual <<resourcePathName | !singularize>> within the collection
      of <<resourcePathName | !pluralize>>
    get:
      description: |
        retreive an individual <<resourcePathName | !singularize>>
      responses:
        200: &responseCollectionMemberOk
          description: |
            the <<resourcePathName | !singularize>> was found and retreived
          body:
            application/json:
              type: <<collectionMemberResponseType>>
        404: &responseNotFound
          description: |
            the requested <<resourcePathName | !singularize>> could not be found
          body:
            application/json:
              type: <<errorResponseType>>
        500: *responseServerError
    put:
      description: |
        modify an existing <<resourcePathName | !singularize>>
      body: *requestCollectionMemberPrototype
      responses:
        200: *responseCollectionMemberOk
        400: *responseBadRequest
        404: *responseNotFound
        409: *responseConflict
        500: *responseServerError
    delete:
      description: |
        delete a existing <<resourcePathName | !singularize>>
      responses:
        200: &responseDefaultOk
          description: |
            the <<resourcePathName | !singularize>> was deleted
          body:
            application/json:
              type: <<defaultResponseType>>
        404: *responseNotFound
        500: *responseServerError
  collectionMemberRelatedCollection:
    description: |
      the collection of related <<resourcePathName>>
    get:
      description: |
        query the collection of related <<resourcePathName | !pluralize>>
        may include optional filtering and sorting criteria
        responses may paginated
      responses:
        200:
          description: |
            query on the collection of <<resourcePathName | !pluralize>>
            was successful
          body:
            application/json:
              type: <<collectionMemberRelatedCollectionResponseType>>
        400: *responseBadRequest
        500: *responseServerError
    post:
      description: |
        add a new <<resourcePathName | !singularize>>
      body:
        application/json:
          type: <<collectionMemberRelatedCollectionMemberPrototypeType>>
      responses:
        201:
          description: |
            the <<resourcePathName | !singularize>> was added
          body:
            application/json:
              type: <<collectionMemberRelatedCollectionMemberResponseType>>
        400: *responseBadRequest
        409: *responseConflict
        500: *responseServerError
  collectionMemberRelatedCollectionMember:
    description: |
      an individual <<resourcePathName | !singularize>> within the collection
      of related <<resourcePathName | !pluralize>>
    delete:
      responses:
        200: *responseDefaultOk
        404: *responseNotFound
        500: *responseServerError
        